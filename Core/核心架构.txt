0-1MB处为内核使用的内存范围。
	00000-003FF	IVR，中断向量表
	00400-005FF	BIOS数据区
	00600-9FFFF	自由使用（07C00-07E00：引导扇区）
	A0000-AFFFF	图形显存
	B0000-B7FFF	单色文本显存
	B8000-BFFFF	彩色文本显存
	C0000-CFFFF	显卡ROM-BIOS区（C0000=0xAA55）
	D0000-FFFFF	主板ROM-BIOS区（D0000=0xAA55，E0000=0xAA55）
0-16MB处为DMA缓冲区。
16MB-20MB为内存管理数据（刘乔羽的内存管理模型）

1、引导部份
引导方式：
	1)BIOS自检后读取硬盘MBR扇区到物理地址0x7C00执行。
	2)MBR自动查找可用的DBR，载入到物理地址0x7C00执行。
	3)DBR查找硬盘根目录Loader.sys，载入到0x7C00执行。
	4)Loader.sys完成一些必要的初始化，设置好临时GDT，把Core.sys载入到内核开始处，再进入保护模式的同时跳转至Core执行。
	5)Core.sys即内核。

注意事项：
	Loader.sys、Core.sys都是平坦二进制文件。
	我们不需要编写MBR。 MBR就使用通用MBR即可。
	DBR只负责从文件系统载入Loader.sys到0x7C00然后跳转至信，并不需要它去做更多的工作。
	Loader.sys负责以下事项：
		初始化16位子系统
		载入驱动
		对各部份硬件进行必要的初始化
		载入Core.sys
		构建保护模式运行环境
		切换进保护模式
		借助进入保护模式的机会跳转至Core.sys的位置
	Core.sys的开头部份是用汇编编写的，剩下部份是C（注：不是C++）。 Loader.sys和DBR部份是纯汇编。
	Loader.sys，必要的话可以使用Turbo C编写C的部份（不推荐）

2、内核部份
	请你们来补充